# pytorch_lightning==1.8.3.post1
seed_everything: 42
trainer:
  logger:
    class_path: pytorch_lightning.loggers.WandbLogger
    init_args:
      project: microfluidics_summer
      entity: monash-deep-neuron
      offline: false
  enable_checkpointing: true
  callbacks:
    - class_path: pytorch_lightning.callbacks.EarlyStopping
      init_args:
        monitor: validation/accuracy
        mode: max
        patience: 100
    - class_path: pytorch_lightning.callbacks.ModelCheckpoint
      init_args:
        dirpath: saved/
        filename: "epoch={epoch}-val_loss={validation/loss:.2f}-val_acc={validation/accuracy:.2f}"
        auto_insert_metric_name: false
        monitor: validation/accuracy
        mode: max
        save_top_k: 3
        save_last: true
    - class_path: callbacks.callbacks.KeyboardCallback
  accelerator: gpu
  devices: 1
  check_val_every_n_epoch: 1
  max_epochs: 100
  min_epochs: null
  log_every_n_steps: 1
  precision: 32
  enable_model_summary: true
  deterministic: warn
  num_sanity_val_steps: 0
  auto_lr_find: null
  auto_scale_batch_size: null
model:
  class_path: models.MetaClassifierV2.MetaClassifierV2
  init_args:
    loss_fn: torch.nn.functional.cross_entropy
    num_classes: 2
    print_metrics: False
optimizer:
  class_path: torch.optim.Adam
  init_args:
    lr: 0.01
# lr_scheduler:
#   class_path: torch.optim.lr_scheduler.ExponentialLR
#   init_args:
#     gamma: 0.1
data:
  class_path: dataModules.MfdDataModule.MfdDataModule
  init_args:
    data_dir: data/364/
    batch_size: 10
    num_workers: 4
    train_percent: 0.8
    balanced: True
    train_transforms:
      - class_path: torchvision.transforms.ToTensor
        init_args:
      # - class_path: torchvision.transforms.Resize
      #   init_args:
      #     size: [299, 299]
      - class_path: torchvision.transforms.RandomHorizontalFlip
        init_args:
      - class_path: torchvision.transforms.RandomVerticalFlip
        init_args:
      - class_path: torchvision.transforms.Normalize
        init_args:
          mean: [0.1553]
          std: [0.1838]
    val_transforms:
      - class_path: torchvision.transforms.ToTensor
        init_args:
      # - class_path: torchvision.transforms.Resize
      #   init_args:
      #     size: [299, 299]
      - class_path: torchvision.transforms.Normalize
        init_args:
          mean: [0.1553]
          std: [0.1838]
ckpt_path: null



# Best learning rate = 0.0002089296130854041
